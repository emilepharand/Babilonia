{
  "name": "babilonia",
  "version": "2.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "clean": "rm -rf .nyc_output* tests/coverage dist/assets dist/css dist/img dist/js dist/*.ico dist/*.html dist/*.cjs",
    "build": "npm run clean && vite build && webpack",
    "dev": "export $(xargs < .env) && run-p dev:serve:api dev:serve:vue",
    "dev:serve:api": "nodemon server/index.ts --dev-mode",
    "dev:serve:vue": "vite --port=$VITE_BASE_PORT",
    "check": "npx vue-tsc --noEmit && npm run lint",
    "lint": "eslint . --ext .ts --max-warnings=0 && eslint . --ext .vue --max-warnings=0 && eslint . --ext .js --max-warnings=0",
    "pretest": "npm run check && npm run test:build",
    "test:build": "export $(xargs < .env.test) && npm run build && mkdir -p tests/coverage/merged",
    "test": "npm run test:bash && npm run test:api && npm run test:e2e",
    "test:serve": "cd dist && node index.cjs --db=:memory: 2>/dev/null",
    "test:bash": "export $(xargs < .env.test) && tests/bash/tests.sh",
    "test:api": "export $(xargs < .env.test) && start-server-and-test test:serve :$VITE_API_PORT test:api:run",
    "test:api:run": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand && npm run test:api:coverage",
    "test:api:coverage": "curl localhost:$VITE_BASE_PORT/__coverage__ | cut -c13- | sed 's/.$//' > tests/coverage/merged/coverage-nyc.json",
    "test:e2e": "export $(xargs < .env.test) && start-server-and-test test:serve :$VITE_API_PORT test:e2e:run",
    "test:e2e:run": "cypress run --browser chromium && npm run test:coverage",
    "test:coverage": "npm run test:merge && npm run test:report",
    "test:merge": "cp tests/coverage/cypress/coverage-final.json tests/coverage/merged/coverage-cypress.json",
    "test:report": "nyc report -t tests/coverage/merged --report-dir tests/coverage/merged -r=html -r=cobertura && rm -rf .nyc_output*",
    "test:dev:vue": "export $(xargs < .env.test) && start-server-and-test test:dev:serve :$VITE_BASE_PORT test:e2e:run",
    "test:dev:serve": "export $(xargs < .env.test) && run-p test:dev:serve:api dev:serve:vue",
    "test:dev:serve:api": "nodemon server/index.ts --dev-mode --db=:memory:"
  },
  "dependencies": {
    "ajv": "^8.12.0",
    "async-lock": "^1.4.0",
    "bootstrap": "^5.3.2",
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "sqlite": "^5.0.1",
    "sqlite3": "^5.1.6",
    "vue": "^3.3.4",
    "vue-router": "^4.2.5"
  },
  "devDependencies": {
    "@cypress/code-coverage": "^3.11.0",
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@types/async-lock": "^1.4.0",
    "@types/bootstrap": "^5.2.7",
    "@types/cors": "^2.8.14",
    "@types/jest": "^29.5.5",
    "@typescript-eslint/eslint-plugin": "^6.7.2",
    "@typescript-eslint/parser": "^6.7.2",
    "@vitejs/plugin-vue": "^4.3.4",
    "@vue/cli-plugin-babel": "~5.0.8",
    "@vue/cli-plugin-e2e-cypress": "~5.0.8",
    "@vue/cli-plugin-eslint": "~5.0.8",
    "@vue/cli-plugin-router": "~5.0.8",
    "@vue/cli-plugin-typescript": "~5.0.8",
    "@vue/cli-service": "~5.0.8",
    "@vue/compiler-sfc": "^3.3.4",
    "@vue/eslint-config-typescript": "^12.0.0",
    "@vue/test-utils": "^2.4.1",
    "cypress": "^13.2.0",
    "cypress-fail-on-console-error": "^5.0.0",
    "dotenv": "^16.3.1",
    "eslint": "^8.50.0",
    "eslint-config-standard": "^17.1.0",
    "eslint-config-xo": "^0.43.1",
    "eslint-config-xo-typescript": "^1.0.1",
    "eslint-plugin": "^1.0.1",
    "eslint-plugin-cypress": "^2.15.1",
    "eslint-plugin-import": "^2.28.1",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-vue": "^9.17.0",
    "jest": "^29.7.0",
    "node-fetch": "^3.3.2",
    "nodemon": "^3.0.1",
    "npm-run-all": "^4.1.5",
    "serve": "^14.2.1",
    "start-server-and-test": "^2.0.0",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.4.4",
    "ts-node": "^10.9.1",
    "typescript": "^5.2.2",
    "vite": "^4.4.9",
    "vite-plugin-istanbul": "^4.0.0",
    "vue-eslint-parser": "^9.3.1",
    "vue-tsc": "^1.8.13",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4",
    "webpack-node-externals": "^3.0.0"
  },
  "nyc": {
    "report-dir": "tests/coverage/cypress",
    "temp-dir": ".nyc_output_cypress"
  }
}
